[{"C:\\Users\\Arun\\GitProjects\\Github\\udayabhanu-panickar\\client\\src\\index.js":"1","C:\\Users\\Arun\\GitProjects\\Github\\udayabhanu-panickar\\client\\src\\App.js":"2","C:\\Users\\Arun\\GitProjects\\Github\\udayabhanu-panickar\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Arun\\GitProjects\\Github\\udayabhanu-panickar\\client\\src\\pages\\landing\\landing.jsx":"4","C:\\Users\\Arun\\GitProjects\\Github\\udayabhanu-panickar\\client\\src\\pages\\Landing\\landing.jsx":"5","C:\\Users\\Arun\\GitProjects\\Github\\udayabhanu-panickar\\client\\src\\components\\header\\header.jsx":"6"},{"size":543,"mtime":1608696021981,"results":"7","hashOfConfig":"8"},{"size":582,"mtime":1608858901701,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2727,"mtime":1608699873431,"results":"11","hashOfConfig":"8"},{"size":3493,"mtime":1608876698566,"results":"12","hashOfConfig":"8"},{"size":3428,"mtime":1608876462270,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1lg9o6p",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\Arun\\GitProjects\\Github\\udayabhanu-panickar\\client\\src\\index.js",[],["29","30"],"C:\\Users\\Arun\\GitProjects\\Github\\udayabhanu-panickar\\client\\src\\App.js",["31"],"import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\"\n\nimport Landing from \"./pages/Landing/landing\"\n\nimport {Container} from 'semantic-ui-react';\nfunction App() {\n  return (\n    <Container fluid className = \"app\" style = {{\"border\": \"5px solid purple\"}}>\n      <Router>\n        <Switch>\n          <Route exact path = \"/\">\n            <Landing></Landing>\n          </Route>\n          <Redirect from = \"/*\" to = \"/\"/>\n        </Switch>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","C:\\Users\\Arun\\GitProjects\\Github\\udayabhanu-panickar\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Arun\\GitProjects\\Github\\udayabhanu-panickar\\client\\src\\pages\\landing\\landing.jsx",[],"C:\\Users\\Arun\\GitProjects\\Github\\udayabhanu-panickar\\client\\src\\pages\\Landing\\landing.jsx",[],"C:\\Users\\Arun\\GitProjects\\Github\\udayabhanu-panickar\\client\\src\\components\\header\\header.jsx",["32","33"],"import React,{Component} from 'react';\r\nimport styles from \"./header.module.scss\";\r\n\r\nimport LoginPhoto from \"./assets/login.jpg\"\r\n\r\nimport {Grid,Menu,Button,Card, Image, Segment, TransitionablePortal,Icon} from 'semantic-ui-react'\r\n\r\nexport default class SiteHeader extends Component{\r\n    state = {\r\n        portal : false\r\n    }\r\n  \r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n    componentDidMount(){\r\n        this.setState({open: true})\r\n    }\r\n    render () { \r\n\r\n        const {activeItem} = this.state\r\n\r\n        const {portal} = this.state\r\n        \r\n        return(\r\n            <Grid.Row>\r\n                <Grid.Column width = {16}>\r\n                    <Menu stackable className = {styles.customMenu}>\r\n                        <Menu.Item header>Udayabhanu Panickar</Menu.Item>\r\n                        <Menu.Item\r\n                        name='About Me'\r\n                        active={activeItem === 'About Me'}\r\n                        onClick={this.handleItemClick}\r\n                        />\r\n                        <Menu.Item\r\n                        name='Spiritual Writings'\r\n                        active={activeItem === 'Spiritual Writings'}\r\n                        onClick={this.handleItemClick}\r\n                        />\r\n                        <Menu.Item\r\n                        name='Historical Writings'\r\n                        active={activeItem === 'Historical Writings'}\r\n                        onClick={this.handleItemClick}\r\n                        />\r\n                        <Menu.Menu stackable position='right'>\r\n                            <Menu.Item\r\n                            >\r\n                                <TransitionablePortal\r\n                                transition={{\r\n                                    animation: 'zoom',\r\n                                    duration: 300\r\n\r\n                                }}\r\n                                trigger={\r\n                                    <Button icon labelPosition='right'>\r\n                                      Sign in\r\n                                      <Icon name='sign in alternate' />\r\n                                    </Button>\r\n                                }\r\n                            >\r\n                                <Card className = \"\">\r\n                                    <Image src= {LoginPhoto} wrapped ui={false} />\r\n                                    <Card.Content textAlign = {\"center\"}>\r\n                                        <Card.Header>Sign in with</Card.Header>\r\n                                    </Card.Content>\r\n                                        <Card.Content extra textAlign = {\"center\"}>\r\n                                            <Button circular color='facebook' icon='facebook' />\r\n                                            <Button circular color='twitter' icon='twitter' />\r\n                                            <Button circular color='linkedin' icon='linkedin' />\r\n                                            <Button circular color='google plus' icon='google' />\r\n                                        </Card.Content>\r\n                                </Card>\r\n\r\n                            </TransitionablePortal>\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </Menu>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        )\r\n    } \r\n}\r\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":6,"column":39,"nodeType":"40","messageId":"41","endLine":6,"endColumn":46},{"ruleId":"38","severity":1,"message":"43","line":23,"column":16,"nodeType":"40","messageId":"41","endLine":23,"endColumn":22},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Segment' is defined but never used.","'portal' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]